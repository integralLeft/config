// Generated by CoffeeScript 1.9.1
(function() {
  var $, $convertors, $help, $param1, $param2, $source, $target, alert, convert, init, log, worker, workerFallbackScript, workerPath,
    slice = [].slice;

  $ = jQuery;

  worker = null;

  workerFallbackScript = '/js/external/worker-fallback/Worker.js';

  workerPath = window.worker_path || 'js/worker.js';

  $source = null;

  $target = null;

  $convertors = null;

  $param1 = null;

  $param2 = null;

  $help = null;

  (function(global) {
    global._gaq = global._gaq || [];
    global._gaq.push(['_setAccount', 'UA-115818-73']);
    global._gaq.push(['_trackPageview']);
    return (function() {
      var ga, s;
      ga = document.createElement("script");
      ga.type = "text/javascript";
      ga.async = true;
      ga.src = "https://ssl.google-analytics.com/ga.js";
      s = document.getElementsByTagName("script")[0];
      s.parentNode.insertBefore(ga, s);
    })();
  })(window);

  log = function() {
    var args;
    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
  };

  convert = function() {
    var args, convertor;
    convertor = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];
    return worker.postMessage({
      cmd: convertor,
      args: args
    });
  };

  alert = function(text) {
    return window.alert(text);
  };

  init = function() {
    var attachEvents, createWorker, fillOperators;
    fillOperators = function() {
      var items;
      items = [];
      $('#operations p').each(function() {
        var $this, id, label;
        $this = $(this);
        id = $this.attr('id');
        label = $this.find('b').text();
        return items.push('<option value="' + id + '">' + label + '</option>');
      });
      $convertors.html(items.join(''));
      return $convertors.trigger('change');
    };
    attachEvents = function() {
      $('#convert').click(function(event) {
        var convertor, text;
        event.preventDefault();
        text = $source.val();
        convertor = $convertors.val();
        convert(convertor, $source.val(), $param1.val(), $param2.val());
        window._gaq.push(['_trackEvent', convertor]);
        return true;
      });
      $('#up').click(function(event) {
        event.preventDefault();
        return $source.val($target.val());
      });
      $convertors.change(function() {
        var $this, handleParam, id;
        $this = $(this);
        id = $this.val();
        handleParam = function($param, index) {
          var show;
          show = $('#' + id).data('param' + index);
          if (show) {
            $param.attr('placeholder', show);
            $param.show();
          } else {
            $param.hide();
          }
          return $param.val('');
        };
        handleParam($param1, 1);
        handleParam($param2, 2);
        return $help.attr('href', '#' + $(this).val());
      });
      return fillOperators();
    };
    createWorker = function() {
      worker = new Worker(workerPath);
      return worker.addEventListener('message', function(m) {
        return $target.val(m.data.t);
      }, false);
    };
    if (typeof Worker === 'undefined') {
      return $.getScript(workerFallbackScript, function() {
        createWorker();
        return attachEvents();
      });
    } else {
      createWorker();
      return attachEvents();
    }
  };

  $(function() {
    $source = $('#source');
    $target = $('#target');
    $convertors = $('#convertors');
    $param1 = $('#param1');
    $param2 = $('#param2');
    $help = $('#help');
    return init();
  });

}).call(this);
